{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(\"\"),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(commentText);\n  }, [commentText]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"bfHVRo5YzqfTGb2A2nmKSSCVl3w=\");\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","PropTypes","CommentForm","post","commentText","setCommentText","onSubmitComment","console","log","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA,MACvBI,WADuB;AAAA,MACVC,cADU;;AAG9B,MAAMC,eAAe,GAAGP,WAAW,CAAC,YAAM;AACtCQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,MAAMK,mBAAmB,GAAGV,WAAW,CAAC,UAACW,CAAD,EAAO;AAC3CL,IAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,KAAK,EAAEV,WAAhC;AAA6C,IAAA,QAAQ,EAAEK,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KAAf;AAAgE,IAAA,IAAI,EAAC,SAArE;AAA+E,IAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAUH,CArBD;;GAAMd,W;;KAAAA,W;AAuBNA,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,IAAI,EAAEF,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAejB,WAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CommentForm = ({ post }) => {\n    const [commentText, setCommentText] = useState(\"\");\n\n    const onSubmitComment = useCallback(() => {\n        console.log(commentText);\n    }, [commentText]);\n\n    const onChangeCommentText = useCallback((e) => {\n        setCommentText(e.target.value);\n    }, []);\n\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: \"relative\", margin: 0 }}>\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n                <Button style={{ position: \"absolute\", right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">\n                    삐약\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}