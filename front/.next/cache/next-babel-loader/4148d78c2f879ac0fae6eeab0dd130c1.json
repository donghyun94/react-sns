{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 유저 state의 기본 구조\nconst initialState = {\n  loginLoading: false,\n  // 로그인 시도 중\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  // 로그아웃 시도 중\n  logoutDone: false,\n  logoutError: null,\n  signupLoading: false,\n  // 회원가입 시도 중\n  signupDone: false,\n  signupError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도 중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\nconst dummyUser = data => {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"donghyun\",\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: \"동현일\"\n    }, {\n      nickname: \"동현삼\"\n    }, {\n      nickname: \"동현사\"\n    }, {\n      nickname: \"동현오\"\n    }],\n    Followers: [{\n      nickname: \"동현오\"\n    }, {\n      nickname: \"동현육\"\n    }, {\n      nickname: \"동현칠\"\n    }]\n  });\n}; // 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\n\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // 나의 게시글 목록을 추가하고 삭제하는 액션\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // 로그인 액션\n    case LOG_IN_REQUEST:\n      console.log(\"reducer login request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: true,\n        loginError: null,\n        loginDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: false\n      });\n    // 로그아웃 액션\n\n    case LOG_OUT_REQUEST:\n      console.log(\"reducer logout request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: true,\n        logoutDone: false,\n        logoutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: false,\n        logoutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: false,\n        logoutError: action.error\n      });\n    // 회원가입 액션\n\n    case SIGN_UP_REQUEST:\n      console.log(\"reducer signup request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: true,\n        signupDone: false,\n        signupError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: false,\n        signupDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: false,\n        signupError: action.error\n      });\n    // 닉네임 변경 액션\n\n    case CHANGE_NICKNAME_REQUEST:\n      console.log(\"reducer change nickname request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n    // 팔로우 액션\n\n    case FOLLOW_REQUEST:\n      console.log(\"reducer follow request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: true,\n        followDone: false,\n        followError: null\n      });\n\n    case FOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followDone: true\n      });\n\n    case FOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followError: action.error\n      });\n    // 언팔로우 액션\n\n    case UNFOLLOW_REQUEST:\n      console.log(\"reducer unfollow request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: true,\n        unfollowDone: false,\n        unfollowError: null\n      });\n\n    case UNFOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowDone: true\n      });\n\n    case UNFOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowError: action.error\n      });\n    // 나의 게시글 목록 추가\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      });\n    // 나의 게시글 목록 삭제\n\n    case ADD_POST_TO_ME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        me: _objectSpread(_objectSpread({}, state.me), {}, {\n          Posts: [{\n            id: action.data\n          }, ...state.me.Posts]\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/user.js"],"names":["initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","signUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","type","logoutRequestAction","reducer","state","action","console","log","error"],"mappings":"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","sourcesContent":["// 유저 state의 기본 구조\nconst initialState = {\n    loginLoading: false, // 로그인 시도 중\n    loginDone: false,\n    loginError: null,\n    logoutLoading: false, // 로그아웃 시도 중\n    logoutDone: false,\n    logoutError: null,\n    signupLoading: false, // 회원가입 시도 중\n    signupDone: false,\n    signupError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도 중\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    followLoading: false, // 팔로우 시도 중\n    followDone: false,\n    followError: null,\n    unfollowLoading: false, // 언팔 시도 중\n    unfollowDone: false,\n    unfollowError: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n};\n\nconst dummyUser = (data) => {\n    return {\n        ...data,\n        nickname: \"donghyun\",\n        id: 1,\n        Posts: [{ id: 1 }],\n        Followings: [{ nickname: \"동현일\" }, { nickname: \"동현삼\" }, { nickname: \"동현사\" }, { nickname: \"동현오\" }],\n        Followers: [{ nickname: \"동현오\" }, { nickname: \"동현육\" }, { nickname: \"동현칠\" }],\n    };\n};\n\n// 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n// 나의 게시글 목록을 추가하고 삭제하는 액션\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n\n// 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // 로그인 액션\n        case LOG_IN_REQUEST:\n            console.log(\"reducer login request\");\n            return {\n                ...state,\n                loginLoading: true,\n                loginError: null,\n                loginDone: false,\n            };\n\n        case LOG_IN_SUCCESS:\n            return {\n                ...state,\n                loginLoading: false,\n                loginDone: true,\n                me: dummyUser(action.data),\n            };\n\n        case LOG_IN_FAILURE:\n            return {\n                ...state,\n                loginLoading: false,\n                loginDone: false,\n            };\n\n        // 로그아웃 액션\n        case LOG_OUT_REQUEST:\n            console.log(\"reducer logout request\");\n            return {\n                ...state,\n                logoutLoading: true,\n                logoutDone: false,\n                logoutError: null,\n            };\n\n        case LOG_OUT_SUCCESS:\n            return {\n                ...state,\n                logoutLoading: false,\n                logoutDone: true,\n                me: null,\n            };\n\n        case LOG_OUT_FAILURE:\n            return {\n                ...state,\n                logoutLoading: false,\n                logoutError: action.error,\n            };\n\n        // 회원가입 액션\n        case SIGN_UP_REQUEST:\n            console.log(\"reducer signup request\");\n            return {\n                ...state,\n                signupLoading: true,\n                signupDone: false,\n                signupError: null,\n            };\n\n        case SIGN_UP_SUCCESS:\n            return {\n                ...state,\n                signupLoading: false,\n                signupDone: true,\n            };\n\n        case SIGN_UP_FAILURE:\n            return {\n                ...state,\n                signupLoading: false,\n                signupError: action.error,\n            };\n\n        // 닉네임 변경 액션\n        case CHANGE_NICKNAME_REQUEST:\n            console.log(\"reducer change nickname request\");\n            return {\n                ...state,\n                changeNicknameLoading: true,\n                changeNicknameDone: false,\n                changeNicknameError: null,\n            };\n\n        case CHANGE_NICKNAME_SUCCESS:\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameDone: true,\n            };\n\n        case CHANGE_NICKNAME_FAILURE:\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameError: action.error,\n            };\n\n        // 팔로우 액션\n        case FOLLOW_REQUEST:\n            console.log(\"reducer follow request\");\n            return {\n                ...state,\n                followLoading: true,\n                followDone: false,\n                followError: null,\n            };\n\n        case FOLLOW_SUCCESS:\n            return {\n                ...state,\n                followLoading: false,\n                followDone: true,\n            };\n\n        case FOLLOW_FAILURE:\n            return {\n                ...state,\n                followLoading: false,\n                followError: action.error,\n            };\n\n        // 언팔로우 액션\n        case UNFOLLOW_REQUEST:\n            console.log(\"reducer unfollow request\");\n            return {\n                ...state,\n                unfollowLoading: true,\n                unfollowDone: false,\n                unfollowError: null,\n            };\n\n        case UNFOLLOW_SUCCESS:\n            return {\n                ...state,\n                unfollowLoading: false,\n                unfollowDone: true,\n            };\n\n        case UNFOLLOW_FAILURE:\n            return {\n                ...state,\n                unfollowLoading: false,\n                unfollowError: action.error,\n            };\n\n        // 나의 게시글 목록 추가\n        case ADD_POST_TO_ME:\n            return {\n                ...state,\n                me: {\n                    ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts],\n                },\n            };\n        // 나의 게시글 목록 삭제\n        case ADD_POST_TO_ME:\n            return {\n                ...state,\n                me: {\n                    ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts],\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}