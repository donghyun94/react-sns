{"ast":null,"code":"var _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nconst PostForm = () => {\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostLoading,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]); // 게시글 추가가 완료되면 게시글 입력 창을 비운다.\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmitForm = useCallback(() => {\n    console.log(text); // dispatch({\n    //     type: ADD_POST_REQUEST,\n    //     data: {\n    //         text,\n    //     },\n    //});\n  }, []);\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3000/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","text","setText","dispatch","imagePaths","addPostLoading","addPostDone","state","post","imageInput","onClickImageUpload","current","click","onSubmitForm","console","log","onChangeText","e","target","value","margin","float","map","v","display","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA;AAA9B,MAA8CT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/D;AAEA,QAAMC,UAAU,GAAGhB,MAAM,EAAzB;AACA,QAAMiB,kBAAkB,GAAGpB,WAAW,CAAC,MAAM;AACzCmB,IAAAA,UAAU,CAACE,OAAX,CAAmBC,KAAnB;AACH,GAFqC,EAEnC,CAACH,UAAU,CAACE,OAAZ,CAFmC,CAAtC,CAPmB,CAWnB;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,WAAJ,EAAiB;AACbJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,EAIN,CAACI,WAAD,CAJM,CAAT;AAMA,QAAMO,YAAY,GAAGvB,WAAW,CAAC,MAAM;AACnCwB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ,EADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACH,GAR+B,EAQ7B,EAR6B,CAAhC;;AAUA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBf,IAAAA,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAwC,IAAA,OAAO,EAAC,qBAAhD;AAAsE,IAAA,QAAQ,EAAEP,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,SAAS,EAAE,GAA3B;AAAgC,IAAA,WAAW,EAAC,wEAA5C;AAA8D,IAAA,KAAK,EAAEZ,IAArE;AAA2E,IAAA,QAAQ,EAAEe,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAmC,IAAA,GAAG,EAAEP,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,OAAO,EAAEhB,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,CAACkB,GAAX,CAAgBC,CAAD,IACZ;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAG,yBAAwBD,CAAE,EAArC;AAAwC,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAA/C;AAAmE,IAAA,GAAG,EAAEF,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAFJ,CADH,CADL,CATJ,CADJ;AAsBH,CAtDD;;AAwDA,eAAevB,QAAf","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\n\nconst PostForm = () => {\n    const [text, setText] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const { imagePaths, addPostLoading, addPostDone } = useSelector((state) => state.post);\n\n    const imageInput = useRef();\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    // 게시글 추가가 완료되면 게시글 입력 창을 비운다.\n    useEffect(() => {\n        if (addPostDone) {\n            setText(\"\");\n        }\n    }, [addPostDone]);\n\n    const onSubmitForm = useCallback(() => {\n        console.log(text);\n        // dispatch({\n        //     type: ADD_POST_REQUEST,\n        //     data: {\n        //         text,\n        //     },\n        //});\n    }, []);\n\n    const onChangeText = (e) => {\n        setText(e.target.value);\n    };\n\n    return (\n        <Form style={{ margin: \"10px 0 20px\" }} encType=\"multipart/form-data\" onFinish={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText} />\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\" loading={addPostLoading}>\n                    짹짹\n                </Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => (\n                    <div key={v} style={{ display: \"inline-block\" }}>\n                        <img src={`http://localhost:3000/${v}`} style={{ width: \"200px\" }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}