{"ast":null,"code":"var _jsxFileName = \"/Users/dong/Documents/react-sns/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n  const {\n    me,\n    loginDone\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch(); // 메인 화면을 마운트할 때 포스트를 불러오는 액션을 디스패치한다.\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []); // 스크롤을 끝까지 내리면 게시물을 더 불러오는 액션을 디스패치한다.\n\n  useEffect(() => {\n    function onScroll() {\n      // 현재 스크롤 위치(화면 상단 기준), 브라우저 화면의 높이, 총 높이\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight); // 현재 스크롤 위치와 브라우저의 높이를 더했을 때 총 높이가 된다면? 스크롤이 맨 아래에 있다는 뜻. 300픽셀 정도 남겼을 때 로딩하기!\n\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\n        // 불러올 게시물이 있다면 디스패치!\n        if (hasMorePost) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll); // unmount\n\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost]);\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, loginDone && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","me","loginDone","state","user","mainPosts","hasMorePost","post","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAoBR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArC;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAA9C;AAEA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CAJe,CAMf;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT,CAPe,CAaf;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASiB,QAAT,GAAoB;AAChB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F,EAFgB,CAIhB;;AACA,UAAIL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAvG,EAA4G;AACxG;AACA,YAAIZ,WAAJ,EAAiB;AACbE,UAAAA,QAAQ,CAAC;AACLC,YAAAA,IAAI,EAAEV;AADD,WAAD,CAAR;AAGH;AACJ;AACJ;;AACDc,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC,EAfY,CAiBZ;;AACA,WAAO,MAAM;AACTG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AACH,KAFD;AAGH,GArBQ,EAqBN,CAACJ,WAAD,CArBM,CAAT;AAuBA,SACI,4BACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKJ,SAAS,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlB,EAGKG,SAAS,CAACgB,GAAV,CAAed,IAAD,IACX,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACe,EAApB;AAAwB,IAAA,IAAI,EAAEf,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAHL,CADJ,CADJ;AAWH,CAhDD;;AAkDA,eAAeP,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport AppLayout from \"../components/AppLayout\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\n\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst Home = () => {\n    const { me, loginDone } = useSelector((state) => state.user);\n    const { mainPosts, hasMorePost } = useSelector((state) => state.post);\n\n    const dispatch = useDispatch();\n\n    // 메인 화면을 마운트할 때 포스트를 불러오는 액션을 디스패치한다.\n    useEffect(() => {\n        dispatch({\n            type: LOAD_POSTS_REQUEST,\n        });\n    }, []);\n\n    // 스크롤을 끝까지 내리면 게시물을 더 불러오는 액션을 디스패치한다.\n    useEffect(() => {\n        function onScroll() {\n            // 현재 스크롤 위치(화면 상단 기준), 브라우저 화면의 높이, 총 높이\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n\n            // 현재 스크롤 위치와 브라우저의 높이를 더했을 때 총 높이가 된다면? 스크롤이 맨 아래에 있다는 뜻. 300픽셀 정도 남겼을 때 로딩하기!\n            if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight - 300) {\n                // 불러올 게시물이 있다면 디스패치!\n                if (hasMorePost) {\n                    dispatch({\n                        type: LOAD_POSTS_REQUEST,\n                    });\n                }\n            }\n        }\n        window.addEventListener(\"scroll\", onScroll);\n\n        // unmount\n        return () => {\n            window.removeEventListener(\"scroll\", onScroll);\n        };\n    }, [hasMorePost]);\n\n    return (\n        <>\n            <AppLayout>\n                {/* PostForm 컴포넌트는 로그인 한 상태일 때만 보임 */}\n                {loginDone && <PostForm />}\n                {mainPosts.map((post) => (\n                    <PostCard key={post.id} post={post} />\n                ))}\n            </AppLayout>\n        </>\n    );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}