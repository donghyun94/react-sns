{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport produce from \"immer\"; // 유저 state의 기본 구조\n\nvar initialState = {\n  loginLoading: false,\n  // 로그인 시도 중\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  // 로그아웃 시도 중\n  logoutDone: false,\n  logoutError: null,\n  loadUserLoading: false,\n  // 로그인 된 유저 정보 불러오는 중\n  loadUserDone: false,\n  loadUserError: null,\n  signupLoading: false,\n  // 회원가입 시도 중\n  signupDone: false,\n  signupError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도 중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"donghyun\",\n    id: 1,\n    Posts: [{\n      id: 1\n    }],\n    Followings: [{\n      nickname: \"동현일\"\n    }, {\n      nickname: \"동현삼\"\n    }, {\n      nickname: \"동현사\"\n    }, {\n      nickname: \"동현오\"\n    }],\n    Followers: [{\n      nickname: \"동현오\"\n    }, {\n      nickname: \"동현육\"\n    }, {\n      nickname: \"동현칠\"\n    }]\n  });\n}; // 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\n\n\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // 나의 게시글 목록을 추가하고 삭제하는 액션\n\nexport var ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport var REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // 로그인된 사용자의 데이터를 불러오는 액션\n\nexport var LOAD_MY_INFO_REQUEST = \"LOAD_MY_INFO_REQUEST\";\nexport var LOAD_MY_INFO_SUCCESS = \"LOAD_MY_INFO_SUCCESS\";\nexport var LOAD_MY_INFO_FAILURE = \"LOAD_MY_INFO_FAILURE\"; // 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      // 로그인 액션\n      case LOG_IN_REQUEST:\n        draft.loginLoading = true;\n        draft.loginError = null;\n        draft.loginDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.loginLoading = false;\n        draft.loginDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.loginLoading = false;\n        draft.loginDone = false;\n        draft.loginError = action.error;\n        break;\n      // 로그아웃 액션\n\n      case LOG_OUT_REQUEST:\n        draft.logoutLoading = true;\n        draft.logoutDone = false;\n        draft.logoutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logoutLoading = false;\n        draft.logoutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logoutLoading = false;\n        draft.logoutError = action.error;\n        break;\n      // 로그인된 정보 불러오기 액션\n\n      case LOAD_MY_INFO_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserDone = false;\n        draft.loadUserError = null;\n        break;\n\n      case LOAD_MY_INFO_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.loadUserDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOAD_MY_INFO_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n      // 회원가입 액션\n\n      case SIGN_UP_REQUEST:\n        draft.signupLoading = true;\n        draft.signupDone = false;\n        draft.signupError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signupLoading = false;\n        draft.signupDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signupLoading = false;\n        draft.signupError = action.error; // user 라우터로부터 온 에러 메세지\n\n        break;\n      // 닉네임 변경 액션\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.me.nickname = action.data.nickname;\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      // 팔로우 액션\n\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.me.Followings.push({\n          id: action.data\n        });\n        draft.followDone = true;\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n      // 언팔로우 액션\n\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.me.Followings = draft.me.Followings.filter(function (v) {\n          return v.id !== action.data;\n        }); // 그 사람 빼고 목록 갱신\n\n        draft.unfollowDone = true;\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n      // 나의 게시글 목록 추가\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // 나의 게시글 목록 삭제\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      default:\n        break;\n    }\n  }); // switch (action.type) {\n  //     // 로그인 액션\n  //     case LOG_IN_REQUEST:\n  //         console.log(\"reducer login request\");\n  //         return {\n  //             ...state,\n  //             loginLoading: true,\n  //             loginError: null,\n  //             loginDone: false,\n  //         };\n  //     case LOG_IN_SUCCESS:\n  //         return {\n  //             ...state,\n  //             loginLoading: false,\n  //             loginDone: true,\n  //             me: dummyUser(action.data),\n  //         };\n  //     case LOG_IN_FAILURE:\n  //         return {\n  //             ...state,\n  //             loginLoading: false,\n  //             loginDone: false,\n  //         };\n  //     // 로그아웃 액션\n  //     case LOG_OUT_REQUEST:\n  //         console.log(\"reducer logout request\");\n  //         return {\n  //             ...state,\n  //             logoutLoading: true,\n  //             logoutDone: false,\n  //             logoutError: null,\n  //         };\n  //     case LOG_OUT_SUCCESS:\n  //         return {\n  //             ...state,\n  //             logoutLoading: false,\n  //             logoutDone: true,\n  //             me: null,\n  //         };\n  //     case LOG_OUT_FAILURE:\n  //         return {\n  //             ...state,\n  //             logoutLoading: false,\n  //             logoutError: action.error,\n  //         };\n  //     // 회원가입 액션\n  //     case SIGN_UP_REQUEST:\n  //         console.log(\"reducer signup request\");\n  //         return {\n  //             ...state,\n  //             signupLoading: true,\n  //             signupDone: false,\n  //             signupError: null,\n  //         };\n  //     case SIGN_UP_SUCCESS:\n  //         return {\n  //             ...state,\n  //             signupLoading: false,\n  //             signupDone: true,\n  //         };\n  //     case SIGN_UP_FAILURE:\n  //         return {\n  //             ...state,\n  //             signupLoading: false,\n  //             signupError: action.error,\n  //         };\n  //     // 닉네임 변경 액션\n  //     case CHANGE_NICKNAME_REQUEST:\n  //         console.log(\"reducer change nickname request\");\n  //         return {\n  //             ...state,\n  //             changeNicknameLoading: true,\n  //             changeNicknameDone: false,\n  //             changeNicknameError: null,\n  //         };\n  //     case CHANGE_NICKNAME_SUCCESS:\n  //         return {\n  //             ...state,\n  //             changeNicknameLoading: false,\n  //             changeNicknameDone: true,\n  //         };\n  //     case CHANGE_NICKNAME_FAILURE:\n  //         return {\n  //             ...state,\n  //             changeNicknameLoading: false,\n  //             changeNicknameError: action.error,\n  //         };\n  //     // 팔로우 액션\n  //     case FOLLOW_REQUEST:\n  //         console.log(\"reducer follow request\");\n  //         return {\n  //             ...state,\n  //             followLoading: true,\n  //             followDone: false,\n  //             followError: null,\n  //         };\n  //     case FOLLOW_SUCCESS:\n  //         return {\n  //             ...state,\n  //             followLoading: false,\n  //             followDone: true,\n  //         };\n  //     case FOLLOW_FAILURE:\n  //         return {\n  //             ...state,\n  //             followLoading: false,\n  //             followError: action.error,\n  //         };\n  //     // 언팔로우 액션\n  //     case UNFOLLOW_REQUEST:\n  //         console.log(\"reducer unfollow request\");\n  //         return {\n  //             ...state,\n  //             unfollowLoading: true,\n  //             unfollowDone: false,\n  //             unfollowError: null,\n  //         };\n  //     case UNFOLLOW_SUCCESS:\n  //         return {\n  //             ...state,\n  //             unfollowLoading: false,\n  //             unfollowDone: true,\n  //         };\n  //     case UNFOLLOW_FAILURE:\n  //         return {\n  //             ...state,\n  //             unfollowLoading: false,\n  //             unfollowError: action.error,\n  //         };\n  //     // 나의 게시글 목록 추가\n  //     case ADD_POST_TO_ME:\n  //         return {\n  //             ...state,\n  //             me: {\n  //                 ...state.me,\n  //                 Posts: [{ id: action.data }, ...state.me.Posts],\n  //             },\n  //         };\n  //     // 나의 게시글 목록 삭제\n  //     case REMOVE_POST_OF_ME:\n  //         return {\n  //             ...state,\n  //             me: {\n  //                 ...state.me,\n  //                 Posts: state.me.Posts.filter((v) => v.id !== action.data),\n  //             },\n  //         };\n  //     default:\n  //         return state;\n  // }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/user.js"],"names":["produce","initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","loadUserLoading","loadUserDone","loadUserError","signupLoading","signupDone","signupError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","signUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","error","push","filter","v","unshift"],"mappings":"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AAiBgC,KAAK,CAACvC,EAAN,CAASO,KAAT,CAAemC,MAAf,CAAsB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACrC,EAAF,KAASgC,MAAM,CAAClC,IAAvB;AAAA,SAAtB,CAAjB;AACA;;AAEJ;AACI;AA5HR;AA8HH,GA/Ha,CAAd,CAD8C,CAiI9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA1SD;;AA4SA,eAAegC,OAAf","sourcesContent":["import produce from \"immer\";\n\n// 유저 state의 기본 구조\nconst initialState = {\n    loginLoading: false, // 로그인 시도 중\n    loginDone: false,\n    loginError: null,\n    logoutLoading: false, // 로그아웃 시도 중\n    logoutDone: false,\n    logoutError: null,\n    loadUserLoading: false, // 로그인 된 유저 정보 불러오는 중\n    loadUserDone: false,\n    loadUserError: null,\n    signupLoading: false, // 회원가입 시도 중\n    signupDone: false,\n    signupError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도 중\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    followLoading: false, // 팔로우 시도 중\n    followDone: false,\n    followError: null,\n    unfollowLoading: false, // 언팔 시도 중\n    unfollowDone: false,\n    unfollowError: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n};\n\nconst dummyUser = (data) => {\n    return {\n        ...data,\n        nickname: \"donghyun\",\n        id: 1,\n        Posts: [{ id: 1 }],\n        Followings: [{ nickname: \"동현일\" }, { nickname: \"동현삼\" }, { nickname: \"동현사\" }, { nickname: \"동현오\" }],\n        Followers: [{ nickname: \"동현오\" }, { nickname: \"동현육\" }, { nickname: \"동현칠\" }],\n    };\n};\n\n// 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n// 나의 게시글 목록을 추가하고 삭제하는 액션\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\n// 로그인된 사용자의 데이터를 불러오는 액션\nexport const LOAD_MY_INFO_REQUEST = \"LOAD_MY_INFO_REQUEST\";\nexport const LOAD_MY_INFO_SUCCESS = \"LOAD_MY_INFO_SUCCESS\";\nexport const LOAD_MY_INFO_FAILURE = \"LOAD_MY_INFO_FAILURE\";\n\n// 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            // 로그인 액션\n            case LOG_IN_REQUEST:\n                draft.loginLoading = true;\n                draft.loginError = null;\n                draft.loginDone = false;\n                break;\n            case LOG_IN_SUCCESS:\n                draft.loginLoading = false;\n                draft.loginDone = true;\n                draft.me = action.data;\n                break;\n            case LOG_IN_FAILURE:\n                draft.loginLoading = false;\n                draft.loginDone = false;\n                draft.loginError = action.error;\n                break;\n\n            // 로그아웃 액션\n            case LOG_OUT_REQUEST:\n                draft.logoutLoading = true;\n                draft.logoutDone = false;\n                draft.logoutError = null;\n                break;\n            case LOG_OUT_SUCCESS:\n                draft.logoutLoading = false;\n                draft.logoutDone = true;\n                draft.me = null;\n                break;\n            case LOG_OUT_FAILURE:\n                draft.logoutLoading = false;\n                draft.logoutError = action.error;\n                break;\n\n            // 로그인된 정보 불러오기 액션\n            case LOAD_MY_INFO_REQUEST:\n                draft.loadUserLoading = true;\n                draft.loadUserDone = false;\n                draft.loadUserError = null;\n                break;\n            case LOAD_MY_INFO_SUCCESS:\n                draft.loadUserLoading = false;\n                draft.loadUserDone = true;\n                draft.me = action.data;\n                break;\n            case LOAD_MY_INFO_FAILURE:\n                draft.loadUserLoading = false;\n                draft.loadUserError = action.error;\n                break;\n\n            // 회원가입 액션\n            case SIGN_UP_REQUEST:\n                draft.signupLoading = true;\n                draft.signupDone = false;\n                draft.signupError = null;\n                break;\n            case SIGN_UP_SUCCESS:\n                draft.signupLoading = false;\n                draft.signupDone = true;\n                break;\n            case SIGN_UP_FAILURE:\n                draft.signupLoading = false;\n                draft.signupError = action.error; // user 라우터로부터 온 에러 메세지\n                break;\n\n            // 닉네임 변경 액션\n            case CHANGE_NICKNAME_REQUEST:\n                draft.changeNicknameLoading = true;\n                draft.changeNicknameDone = false;\n                draft.changeNicknameError = null;\n                break;\n            case CHANGE_NICKNAME_SUCCESS:\n                draft.me.nickname = action.data.nickname;\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameDone = true;\n                break;\n            case CHANGE_NICKNAME_FAILURE:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameError = action.error;\n                break;\n\n            // 팔로우 액션\n            case FOLLOW_REQUEST:\n                draft.followLoading = true;\n                draft.followDone = false;\n                draft.followError = null;\n                break;\n            case FOLLOW_SUCCESS:\n                draft.followLoading = false;\n                draft.me.Followings.push({ id: action.data });\n                draft.followDone = true;\n                break;\n            case FOLLOW_FAILURE:\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n\n            // 언팔로우 액션\n            case UNFOLLOW_REQUEST:\n                draft.unfollowLoading = true;\n                draft.unfollowDone = false;\n                draft.unfollowError = null;\n                break;\n            case UNFOLLOW_SUCCESS:\n                draft.unfollowLoading = false;\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data); // 그 사람 빼고 목록 갱신\n                draft.unfollowDone = true;\n                break;\n            case UNFOLLOW_FAILURE:\n                draft.unfollowLoading = false;\n                draft.unfollowError = action.error;\n                break;\n\n            // 나의 게시글 목록 추가\n            case ADD_POST_TO_ME:\n                draft.me.Posts.unshift({ id: action.data });\n                break;\n\n            // 나의 게시글 목록 삭제\n            case REMOVE_POST_OF_ME:\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n                break;\n\n            default:\n                break;\n        }\n    });\n    // switch (action.type) {\n    //     // 로그인 액션\n    //     case LOG_IN_REQUEST:\n    //         console.log(\"reducer login request\");\n    //         return {\n    //             ...state,\n    //             loginLoading: true,\n    //             loginError: null,\n    //             loginDone: false,\n    //         };\n\n    //     case LOG_IN_SUCCESS:\n    //         return {\n    //             ...state,\n    //             loginLoading: false,\n    //             loginDone: true,\n    //             me: dummyUser(action.data),\n    //         };\n\n    //     case LOG_IN_FAILURE:\n    //         return {\n    //             ...state,\n    //             loginLoading: false,\n    //             loginDone: false,\n    //         };\n\n    //     // 로그아웃 액션\n    //     case LOG_OUT_REQUEST:\n    //         console.log(\"reducer logout request\");\n    //         return {\n    //             ...state,\n    //             logoutLoading: true,\n    //             logoutDone: false,\n    //             logoutError: null,\n    //         };\n\n    //     case LOG_OUT_SUCCESS:\n    //         return {\n    //             ...state,\n    //             logoutLoading: false,\n    //             logoutDone: true,\n    //             me: null,\n    //         };\n\n    //     case LOG_OUT_FAILURE:\n    //         return {\n    //             ...state,\n    //             logoutLoading: false,\n    //             logoutError: action.error,\n    //         };\n\n    //     // 회원가입 액션\n    //     case SIGN_UP_REQUEST:\n    //         console.log(\"reducer signup request\");\n    //         return {\n    //             ...state,\n    //             signupLoading: true,\n    //             signupDone: false,\n    //             signupError: null,\n    //         };\n\n    //     case SIGN_UP_SUCCESS:\n    //         return {\n    //             ...state,\n    //             signupLoading: false,\n    //             signupDone: true,\n    //         };\n\n    //     case SIGN_UP_FAILURE:\n    //         return {\n    //             ...state,\n    //             signupLoading: false,\n    //             signupError: action.error,\n    //         };\n\n    //     // 닉네임 변경 액션\n    //     case CHANGE_NICKNAME_REQUEST:\n    //         console.log(\"reducer change nickname request\");\n    //         return {\n    //             ...state,\n    //             changeNicknameLoading: true,\n    //             changeNicknameDone: false,\n    //             changeNicknameError: null,\n    //         };\n\n    //     case CHANGE_NICKNAME_SUCCESS:\n    //         return {\n    //             ...state,\n    //             changeNicknameLoading: false,\n    //             changeNicknameDone: true,\n    //         };\n\n    //     case CHANGE_NICKNAME_FAILURE:\n    //         return {\n    //             ...state,\n    //             changeNicknameLoading: false,\n    //             changeNicknameError: action.error,\n    //         };\n\n    //     // 팔로우 액션\n    //     case FOLLOW_REQUEST:\n    //         console.log(\"reducer follow request\");\n    //         return {\n    //             ...state,\n    //             followLoading: true,\n    //             followDone: false,\n    //             followError: null,\n    //         };\n\n    //     case FOLLOW_SUCCESS:\n    //         return {\n    //             ...state,\n    //             followLoading: false,\n    //             followDone: true,\n    //         };\n\n    //     case FOLLOW_FAILURE:\n    //         return {\n    //             ...state,\n    //             followLoading: false,\n    //             followError: action.error,\n    //         };\n\n    //     // 언팔로우 액션\n    //     case UNFOLLOW_REQUEST:\n    //         console.log(\"reducer unfollow request\");\n    //         return {\n    //             ...state,\n    //             unfollowLoading: true,\n    //             unfollowDone: false,\n    //             unfollowError: null,\n    //         };\n\n    //     case UNFOLLOW_SUCCESS:\n    //         return {\n    //             ...state,\n    //             unfollowLoading: false,\n    //             unfollowDone: true,\n    //         };\n\n    //     case UNFOLLOW_FAILURE:\n    //         return {\n    //             ...state,\n    //             unfollowLoading: false,\n    //             unfollowError: action.error,\n    //         };\n\n    //     // 나의 게시글 목록 추가\n    //     case ADD_POST_TO_ME:\n    //         return {\n    //             ...state,\n    //             me: {\n    //                 ...state.me,\n    //                 Posts: [{ id: action.data }, ...state.me.Posts],\n    //             },\n    //         };\n\n    //     // 나의 게시글 목록 삭제\n    //     case REMOVE_POST_OF_ME:\n    //         return {\n    //             ...state,\n    //             me: {\n    //                 ...state.me,\n    //                 Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //             },\n    //         };\n    //     default:\n    //         return state;\n    // }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}