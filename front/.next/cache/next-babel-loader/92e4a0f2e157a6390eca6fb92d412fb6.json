{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 유저 state의 기본 구조\nconst initialState = {\n  isLoggingIn: false,\n  // 로그인 시도 중\n  isLoggedIn: false,\n  // 로그인 상태\n  isLoggingOut: false,\n  // 로그아웃 시도 중\n  me: null,\n  signUpData: {},\n  loginData: {}\n}; // 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\n\nexport const loginRequestAction = data => {\n  return {\n    type: \"LOG_IN_REQUEST\",\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: \"LOG_OUT_REQUEST\"\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // 로그인 액션\n    case \"LOG_IN_REQUEST\":\n      console.log(\"reducer login request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case \"LOG_IN_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: \"donghyun\"\n        })\n      });\n\n    case \"LOG_IN_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n    // 로그아웃 액션\n\n    case \"LOG_OUT_REQUEST\":\n      console.log(\"reducer logout request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case \"LOG_OUT_SUCCESS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case \"LOG_OUT_FAILURE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/user.js"],"names":["initialState","isLoggingIn","isLoggedIn","isLoggingOut","me","signUpData","loginData","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","console","log","nickname"],"mappings":";;;;;;AAAA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,KADI;AACG;AACpBC,EAAAA,UAAU,EAAE,KAFK;AAEE;AACnBC,EAAAA,YAAY,EAAE,KAHG;AAGI;AACrBC,EAAAA,EAAE,EAAE,IAJa;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,SAAS,EAAE;AANM,CAArB,C,CASA;;AACA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,gBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAMP,MAAME,OAAO,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI;AACA,SAAK,gBAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,6CACOH,KADP;AAEIX,QAAAA,WAAW,EAAE;AAFjB;;AAKJ,SAAK,gBAAL;AACI,6CACOW,KADP;AAEIX,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE,IAHhB;AAIIE,QAAAA,EAAE,kCAAOS,MAAM,CAACL,IAAd;AAAoBQ,UAAAA,QAAQ,EAAE;AAA9B;AAJN;;AAOJ,SAAK,gBAAL;AACI,6CACOJ,KADP;AAEIX,QAAAA,WAAW,EAAE,KAFjB;AAGIC,QAAAA,UAAU,EAAE;AAHhB;AAMJ;;AACA,SAAK,iBAAL;AACIY,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,6CACOH,KADP;AAEIT,QAAAA,YAAY,EAAE;AAFlB;;AAIJ,SAAK,iBAAL;AACI,6CACOS,KADP;AAEIT,QAAAA,YAAY,EAAE,KAFlB;AAGID,QAAAA,UAAU,EAAE,KAHhB;AAIIE,QAAAA,EAAE,EAAE;AAJR;;AAMJ,SAAK,iBAAL;AACI,6CACOQ,KADP;AAEIT,QAAAA,YAAY,EAAE;AAFlB;;AAKJ;AACI,aAAOS,KAAP;AA7CR;AA+CH,CAhDD;;AAkDA,eAAeD,OAAf","sourcesContent":["// 유저 state의 기본 구조\nconst initialState = {\n    isLoggingIn: false, // 로그인 시도 중\n    isLoggedIn: false, // 로그인 상태\n    isLoggingOut: false, // 로그아웃 시도 중\n    me: null,\n    signUpData: {},\n    loginData: {}\n};\n\n// 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\nexport const loginRequestAction = (data) => {\n    return {\n        type: \"LOG_IN_REQUEST\",\n        data\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: \"LOG_OUT_REQUEST\"\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // 로그인 액션\n        case \"LOG_IN_REQUEST\":\n            console.log(\"reducer login request\");\n            return {\n                ...state,\n                isLoggingIn: true\n            };\n\n        case \"LOG_IN_SUCCESS\":\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: { ...action.data, nickname: \"donghyun\" }\n            };\n\n        case \"LOG_IN_FAILURE\":\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false\n            };\n\n        // 로그아웃 액션\n        case \"LOG_OUT_REQUEST\":\n            console.log(\"reducer logout request\");\n            return {\n                ...state,\n                isLoggingOut: true\n            };\n        case \"LOG_OUT_SUCCESS\":\n            return {\n                ...state,\n                isLoggingOut: false,\n                isLoggedIn: false,\n                me: null\n            };\n        case \"LOG_OUT_FAILURE\":\n            return {\n                ...state,\n                isLoggingOut: false\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}