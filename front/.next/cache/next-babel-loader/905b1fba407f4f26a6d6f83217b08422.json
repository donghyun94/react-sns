{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// 유저 state의 기본 구조\nvar initialState = {\n  loginLoading: false,\n  // 로그인 시도 중\n  loginDone: false,\n  loginError: null,\n  logoutLoading: false,\n  // 로그아웃 시도 중\n  logoutDone: false,\n  logoutError: null,\n  signupLoading: false,\n  // 회원가입 시도 중\n  signupDone: false,\n  signupError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도 중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  followLoading: false,\n  // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\nvar dummyUser = function dummyUser(data) {\n  return _objectSpread(_objectSpread({}, data), {}, {\n    nickname: \"donghyun\",\n    id: 1,\n    Posts: [],\n    Followings: [],\n    Followers: []\n  });\n}; // 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\n\n\nexport var LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport var LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport var LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport var LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport var LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport var LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport var SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport var SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport var SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport var CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport var CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport var CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport var FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport var FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport var FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport var UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport var UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport var UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\"; // 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\n\nexport var loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: LOG_IN_REQUEST,\n    data: data\n  };\n};\nexport var logoutRequestAction = function logoutRequestAction() {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 로그인 액션\n    case LOG_IN_REQUEST:\n      console.log(\"reducer login request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: true,\n        loginError: null,\n        loginDone: false\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: true,\n        me: dummyUser(action.data)\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loginLoading: false,\n        loginDone: false\n      });\n    // 로그아웃 액션\n\n    case LOG_OUT_REQUEST:\n      console.log(\"reducer logout request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: true,\n        logoutDone: false,\n        logoutError: null\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: false,\n        logoutDone: true,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logoutLoading: false,\n        logoutError: action.error\n      });\n    // 회원가입 액션\n\n    case SIGN_UP_REQUEST:\n      console.log(\"reducer signup request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: true,\n        signupDone: false,\n        signupError: null\n      });\n\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: false,\n        signupDone: true\n      });\n\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signupLoading: false,\n        signupError: action.error\n      });\n    // 닉네임 변경 액션\n\n    case CHANGE_NICKNAME_REQUEST:\n      console.log(\"reducer change nickname request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: true,\n        changeNicknameDone: false,\n        changeNicknameError: null\n      });\n\n    case CHANGE_NICKNAME_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameDone: true\n      });\n\n    case CHANGE_NICKNAME_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        changeNicknameLoading: false,\n        changeNicknameError: action.error\n      });\n    // 팔로우 액션\n\n    case FOLLOW_REQUEST:\n      console.log(\"reducer follow request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: true,\n        followDone: false,\n        followError: null\n      });\n\n    case FOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followDone: true\n      });\n\n    case FOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        followLoading: false,\n        followError: action.error\n      });\n    // 언팔로우 액션\n\n    case UNFOLLOW_REQUEST:\n      console.log(\"reducer unfollow request\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: true,\n        unfollowDone: false,\n        unfollowError: null\n      });\n\n    case UNFOLLOW_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowDone: true\n      });\n\n    case UNFOLLOW_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        unfollowLoading: false,\n        unfollowError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/user.js"],"names":["initialState","loginLoading","loginDone","loginError","logoutLoading","logoutDone","logoutError","signupLoading","signupDone","signupError","changeNicknameLoading","changeNicknameDone","changeNicknameError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","me","signUpData","loginData","dummyUser","data","nickname","id","Posts","Followings","Followers","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","type","logoutRequestAction","reducer","state","action","console","log","error"],"mappings":"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","sourcesContent":["// 유저 state의 기본 구조\nconst initialState = {\n    loginLoading: false, // 로그인 시도 중\n    loginDone: false,\n    loginError: null,\n    logoutLoading: false, // 로그아웃 시도 중\n    logoutDone: false,\n    logoutError: null,\n    signupLoading: false, // 회원가입 시도 중\n    signupDone: false,\n    signupError: null,\n    changeNicknameLoading: false, // 닉네임 변경 시도 중\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    followLoading: false, // 팔로우 시도 중\n    followDone: false,\n    followError: null,\n    unfollowLoading: false, // 언팔 시도 중\n    unfollowDone: false,\n    unfollowError: null,\n    me: null,\n    signUpData: {},\n    loginData: {},\n};\n\nconst dummyUser = (data) => {\n    return {\n        ...data,\n        nickname: \"donghyun\",\n        id: 1,\n        Posts: [],\n        Followings: [],\n        Followers: [],\n    };\n};\n\n// 오타 방지를 위해 액션 타입을 미리 변수에 할당한다.\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\n// 동적으로 로그인 데이터를 바꿀 수 있는 액션 함수\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // 로그인 액션\n        case LOG_IN_REQUEST:\n            console.log(\"reducer login request\");\n            return {\n                ...state,\n                loginLoading: true,\n                loginError: null,\n                loginDone: false,\n            };\n\n        case LOG_IN_SUCCESS:\n            return {\n                ...state,\n                loginLoading: false,\n                loginDone: true,\n                me: dummyUser(action.data),\n            };\n\n        case LOG_IN_FAILURE:\n            return {\n                ...state,\n                loginLoading: false,\n                loginDone: false,\n            };\n\n        // 로그아웃 액션\n        case LOG_OUT_REQUEST:\n            console.log(\"reducer logout request\");\n            return {\n                ...state,\n                logoutLoading: true,\n                logoutDone: false,\n                logoutError: null,\n            };\n\n        case LOG_OUT_SUCCESS:\n            return {\n                ...state,\n                logoutLoading: false,\n                logoutDone: true,\n                me: null,\n            };\n\n        case LOG_OUT_FAILURE:\n            return {\n                ...state,\n                logoutLoading: false,\n                logoutError: action.error,\n            };\n\n        // 회원가입 액션\n        case SIGN_UP_REQUEST:\n            console.log(\"reducer signup request\");\n            return {\n                ...state,\n                signupLoading: true,\n                signupDone: false,\n                signupError: null,\n            };\n\n        case SIGN_UP_SUCCESS:\n            return {\n                ...state,\n                signupLoading: false,\n                signupDone: true,\n            };\n\n        case SIGN_UP_FAILURE:\n            return {\n                ...state,\n                signupLoading: false,\n                signupError: action.error,\n            };\n\n        // 닉네임 변경 액션\n        case CHANGE_NICKNAME_REQUEST:\n            console.log(\"reducer change nickname request\");\n            return {\n                ...state,\n                changeNicknameLoading: true,\n                changeNicknameDone: false,\n                changeNicknameError: null,\n            };\n\n        case CHANGE_NICKNAME_SUCCESS:\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameDone: true,\n            };\n\n        case CHANGE_NICKNAME_FAILURE:\n            return {\n                ...state,\n                changeNicknameLoading: false,\n                changeNicknameError: action.error,\n            };\n\n        // 팔로우 액션\n        case FOLLOW_REQUEST:\n            console.log(\"reducer follow request\");\n            return {\n                ...state,\n                followLoading: true,\n                followDone: false,\n                followError: null,\n            };\n\n        case FOLLOW_SUCCESS:\n            return {\n                ...state,\n                followLoading: false,\n                followDone: true,\n            };\n\n        case FOLLOW_FAILURE:\n            return {\n                ...state,\n                followLoading: false,\n                followError: action.error,\n            };\n\n        // 언팔로우 액션\n        case UNFOLLOW_REQUEST:\n            console.log(\"reducer unfollow request\");\n            return {\n                ...state,\n                unfollowLoading: true,\n                unfollowDone: false,\n                unfollowError: null,\n            };\n\n        case UNFOLLOW_SUCCESS:\n            return {\n                ...state,\n                unfollowLoading: false,\n                unfollowDone: true,\n            };\n\n        case UNFOLLOW_FAILURE:\n            return {\n                ...state,\n                unfollowLoading: false,\n                unfollowError: action.error,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}