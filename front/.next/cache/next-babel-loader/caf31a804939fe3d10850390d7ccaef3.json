{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/NicknameEdit.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin: 0 20px;\\n    border: 1px solid #d9d9d9;\\n    padding: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input } from \"antd\";\nimport Styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\nimport { CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\nvar StyledForm = Styled(Form)(_templateObject());\n_c = StyledForm;\n\nvar NicknameEdit = function NicknameEdit() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useInput = useInput((me === null || me === void 0 ? void 0 : me.nickname) || \"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      nickname = _useInput2[0],\n      onChangeNickname = _useInput2[1];\n\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname\n    });\n  }, [nickname]);\n  return __jsx(React.Fragment, null, __jsx(StyledForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Input.Search, {\n    value: nickname,\n    onChange: onChangeNickname,\n    addonBefore: \"\\uB2C9\\uB124\\uC784\",\n    enterButton: \"\\uC218\\uC815\",\n    onSearch: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(NicknameEdit, \"N7qq+s3xxzry3hENaoydffT6TQU=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c2 = NicknameEdit;\nexport default NicknameEdit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"NicknameEdit\");","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/NicknameEdit.js"],"names":["React","useCallback","useSelector","useDispatch","Form","Input","Styled","useInput","CHANGE_NICKNAME_REQUEST","StyledForm","NicknameEdit","state","user","me","nickname","onChangeNickname","dispatch","onSubmit","type","data"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACF,IAAD,CAAT,mBAAhB;KAAMK,U;;AAMN,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,qBACRR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADH;AAAA,MACfC,EADe,gBACfA,EADe;;AAAA,kBAEcN,QAAQ,CAAC,CAAAM,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEC,QAAJ,KAAgB,EAAjB,CAFtB;AAAA;AAAA,MAEhBA,QAFgB;AAAA,MAENC,gBAFM;;AAGvB,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,MAAMc,QAAQ,GAAGhB,WAAW,CAAC,YAAM;AAC/Be,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,uBADD;AAELW,MAAAA,IAAI,EAAEL;AAFD,KAAD,CAAR;AAIH,GAL2B,EAKzB,CAACA,QAAD,CALyB,CAA5B;AAOA,SACI,4BACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,KAAK,EAAEA,QAArB;AAA+B,IAAA,QAAQ,EAAEC,gBAAzC;AAA2D,IAAA,WAAW,EAAC,oBAAvE;AAA6E,IAAA,WAAW,EAAC,cAAzF;AAA8F,IAAA,QAAQ,EAAEE,QAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAOH,CAnBD;;GAAMP,Y;UACaR,W,EACsBK,Q,EACpBJ,W;;;MAHfO,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Input } from \"antd\";\nimport Styled from \"styled-components\";\n\nimport useInput from \"../hooks/useInput\";\nimport { CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\n\nconst StyledForm = Styled(Form)`\n    margin: 0 20px;\n    border: 1px solid #d9d9d9;\n    padding: 20px;\n`;\n\nconst NicknameEdit = () => {\n    const { me } = useSelector((state) => state.user);\n    const [nickname, onChangeNickname] = useInput(me?.nickname || \"\");\n    const dispatch = useDispatch();\n\n    const onSubmit = useCallback(() => {\n        dispatch({\n            type: CHANGE_NICKNAME_REQUEST,\n            data: nickname,\n        });\n    }, [nickname]);\n\n    return (\n        <>\n            <StyledForm>\n                <Input.Search value={nickname} onChange={onChangeNickname} addonBefore=\"닉네임\" enterButton=\"수정\" onSearch={onSubmit} />\n            </StyledForm>\n        </>\n    );\n};\n\nexport default NicknameEdit;\n"]},"metadata":{},"sourceType":"module"}