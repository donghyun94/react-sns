{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/sagas/post.js"],"names":["all","fork","call","put","takeLatest","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","type","err","error","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,EAA+DC,mBAA/D,EAAoFC,mBAApF,EAAyGC,mBAAzG,QAAoI,kBAApI;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACAZ,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMF,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOW,GAAP,EAAY;AACV,UAAMhB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAET,gBAAR;AAA0BW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAA9C,KAAD,CAAT;AACH;AACJ;;AAED,SAASQ,aAAT,CAAuBR,IAAvB,EAA6B;AACzB,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACS,MAAO,UAApC,EAA+CT,IAA/C,CAAP;AACH;;AACD,UAAUU,UAAV,CAAqBP,MAArB,EAA6B;AACzB,MAAI;AACA;AACAZ,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMF,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GAND,CAME,OAAOQ,GAAP,EAAY;AACV,UAAMhB,GAAG,CAAC;AAAEe,MAAAA,IAAI,EAAEN,mBAAR;AAA6BQ,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAAjD,KAAD,CAAT;AACH;AACJ;;AAED,UAAUW,YAAV,GAAyB;AACrB,QAAMrB,UAAU,CAACG,gBAAD,EAAmBS,OAAnB,CAAhB;AACH;;AAED,UAAUU,eAAV,GAA4B;AACxB,QAAMtB,UAAU,CAACM,mBAAD,EAAsBc,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,YAAD,CAAL,EAAqBxB,IAAI,CAACyB,eAAD,CAAzB,CAAD,CAAT;AACH","sourcesContent":["import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\n\nfunction addPostAPI(data) {\n    return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data);\n        delay(1000);\n        yield put({\n            type: ADD_POST_SUCCESS,\n        });\n    } catch (err) {\n        yield put({ type: ADD_POST_FAILURE, error: err.response.data });\n    }\n}\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n    try {\n        // const result = yield call(addCommentAPI, action.data);\n        delay(1000);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({ type: ADD_COMMENT_FAILURE, error: err.response.data });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n    yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"]},"metadata":{},"sourceType":"module"}