{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// 기본 구조\nconst initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"동현이\"\n    },\n    content: \"동현이의 첫 번째 게시글! #앙 #기모찌\",\n    Images: [{\n      src: \"https://expanddesk-media.s3.amazonaws.com/hosting/740px-Google_Docs_logo.svg.png\"\n    }, {\n      src: \"https://expanddesk-media.s3.amazonaws.com/hosting/logo_google-drive.png\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"동현삼\"\n      },\n      content: \"꺄악\"\n    }, {\n      User: {\n        nickname: \"동현사\"\n      },\n      content: \"아이조아\"\n    }]\n  }],\n  // 이미지 업로드할 때의 경로\n  imagePaths: [],\n  // 게시글 추가가 완료되었는지 여부\n  postAdded: false\n};\nconst dummyPost = {\n  id: 2,\n  content: \"더미 포스트입니다.\",\n  User: {\n    id: 1,\n    nickname: \"동현이\"\n  },\n  Images: [],\n  Comments: []\n};\nexport const addPostAction = () => {\n  return {\n    type: \"ADD_POST\"\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_POST\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummy]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","dummyPost","addPostAction","type","reducer","state","action","dummy"],"mappings":";;;;;;AAAA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,QAAQ,EAAE;AAAnB,KAFV;AAGIC,IAAAA,OAAO,EAAE,wBAHb;AAIIC,IAAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAD,EAA8F;AAAEA,MAAAA,GAAG,EAAE;AAAP,KAA9F,CAJZ;AAKIC,IAAAA,QAAQ,EAAE,CACN;AACIL,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADV;AAEIC,MAAAA,OAAO,EAAE;AAFb,KADM,EAKN;AACIF,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADV;AAEIC,MAAAA,OAAO,EAAE;AAFb,KALM;AALd,GADO,CADM;AAmBjB;AACAI,EAAAA,UAAU,EAAE,EApBK;AAqBjB;AACAC,EAAAA,SAAS,EAAE;AAtBM,CAArB;AAyBA,MAAMC,SAAS,GAAG;AACdT,EAAAA,EAAE,EAAE,CADU;AAEdG,EAAAA,OAAO,EAAE,YAFK;AAGdF,EAAAA,IAAI,EAAE;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASE,IAAAA,QAAQ,EAAE;AAAnB,GAHQ;AAIdE,EAAAA,MAAM,EAAE,EAJM;AAKdE,EAAAA,QAAQ,EAAE;AALI,CAAlB;AAQA,OAAO,MAAMI,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;;AAMP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,UAAL;AACI,6CAAYE,KAAZ;AAAmBd,QAAAA,SAAS,EAAE,CAACgB,KAAD;AAA9B;;AACJ;AACI,aAAOF,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeD,OAAf","sourcesContent":["// 기본 구조\nconst initialState = {\n    mainPosts: [\n        {\n            id: 1,\n            User: { id: 1, nickname: \"동현이\" },\n            content: \"동현이의 첫 번째 게시글! #앙 #기모찌\",\n            Images: [{ src: \"https://expanddesk-media.s3.amazonaws.com/hosting/740px-Google_Docs_logo.svg.png\" }, { src: \"https://expanddesk-media.s3.amazonaws.com/hosting/logo_google-drive.png\" }],\n            Comments: [\n                {\n                    User: { nickname: \"동현삼\" },\n                    content: \"꺄악\"\n                },\n                {\n                    User: { nickname: \"동현사\" },\n                    content: \"아이조아\"\n                }\n            ]\n        }\n    ],\n    // 이미지 업로드할 때의 경로\n    imagePaths: [],\n    // 게시글 추가가 완료되었는지 여부\n    postAdded: false\n};\n\nconst dummyPost = {\n    id: 2,\n    content: \"더미 포스트입니다.\",\n    User: { id: 1, nickname: \"동현이\" },\n    Images: [],\n    Comments: []\n};\n\nexport const addPostAction = () => {\n    return {\n        type: \"ADD_POST\"\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_POST\":\n            return { ...state, mainPosts: [dummy] };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}