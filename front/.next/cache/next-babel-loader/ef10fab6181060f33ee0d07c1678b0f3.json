{"ast":null,"code":"import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    delay(1000);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/sagas/post.js"],"names":["all","fork","call","put","takeLatest","delay","axios","addPostAPI","data","post","addPost","action","type","result","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AACD,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACAN,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,UAAMF,GAAG,CAAC;AACNS,MAAAA,IAAI,EAAE,kBADA;AAENJ,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOM,GAAP,EAAY;AACV,UAAMX,GAAG,CAAC;AAAES,MAAAA,IAAI,EAAE,kBAAR;AAA4BJ,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAA/C,KAAD,CAAT;AACH;AACJ;;AAED,UAAUQ,YAAV,GAAyB;AACrB,QAAMZ,UAAU,CAAC,kBAAD,EAAqBM,OAArB,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CAACC,IAAI,CAACe,YAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { all, fork, call, put, takeLatest, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction addPostAPI(data) {\n    return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n    try {\n        // const result = yield call(addPostAPI, action.data);\n        delay(1000);\n        yield put({\n            type: \"ADD_POST_SUCCESS\",\n            data: result.data\n        });\n    } catch (err) {\n        yield put({ type: \"ADD_POST_FAILURE\", data: err.response.data });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nexport default function* postSaga() {\n    yield all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}