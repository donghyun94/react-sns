{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// user 기본 데이터 구조\nvar initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"동현이\"\n    },\n    content: \"동현이의 첫 번째 게시글! #아잉 #조아요\",\n    Images: [{\n      src: \"https://expanddesk-media.s3.amazonaws.com/hosting/740px-Google_Docs_logo.svg.png\"\n    }, {\n      src: \"https://expanddesk-media.s3.amazonaws.com/hosting/logo_google-drive.png\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"동현삼\"\n      },\n      content: \"꺄악\"\n    }, {\n      User: {\n        nickname: \"동현사\"\n      },\n      content: \"아이조아\"\n    }]\n  }],\n  // 이미지 업로드할 때의 경로\n  imagePaths: [],\n  // 게시글 추가가 완료되었는지 여부\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  // 댓글 추가가 완료되었는지 여부\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nvar dummyPost = {\n  id: 2,\n  content: \"더미 포스트입니다.\",\n  User: {\n    id: 1,\n    nickname: \"동현이\"\n  },\n  Images: [],\n  Comments: []\n}; // 액션 오타 방지용\n\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPostAction = function addPostAction(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 포스트 액션\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n    // 코멘트 액션\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAction","data","type","reducer","state","action","error"],"mappings":"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","sourcesContent":["// user 기본 데이터 구조\nconst initialState = {\n    mainPosts: [\n        {\n            id: 1,\n            User: { id: 1, nickname: \"동현이\" },\n            content: \"동현이의 첫 번째 게시글! #아잉 #조아요\",\n            Images: [{ src: \"https://expanddesk-media.s3.amazonaws.com/hosting/740px-Google_Docs_logo.svg.png\" }, { src: \"https://expanddesk-media.s3.amazonaws.com/hosting/logo_google-drive.png\" }],\n            Comments: [\n                {\n                    User: { nickname: \"동현삼\" },\n                    content: \"꺄악\",\n                },\n                {\n                    User: { nickname: \"동현사\" },\n                    content: \"아이조아\",\n                },\n            ],\n        },\n    ],\n    // 이미지 업로드할 때의 경로\n    imagePaths: [],\n\n    // 게시글 추가가 완료되었는지 여부\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n\n    // 댓글 추가가 완료되었는지 여부\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n};\n\nconst dummyPost = {\n    id: 2,\n    content: \"더미 포스트입니다.\",\n    User: { id: 1, nickname: \"동현이\" },\n    Images: [],\n    Comments: [],\n};\n\n// 액션 오타 방지용\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPostAction = (data) => {\n    return {\n        type: ADD_POST_REQUEST,\n        data,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // 포스트 액션\n        case ADD_POST_REQUEST:\n            return {\n                ...state,\n                addPostLoading: true,\n                addPostDone: false,\n                addPostError: null,\n            };\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: [dummyPost, ...state.mainPosts],\n                addPostLoading: false,\n                addPostDone: true,\n            };\n        case ADD_POST_FAILURE:\n            return {\n                ...state,\n                addPostLoading: false,\n                addPostError: action.error,\n            };\n\n        // 코멘트 액션\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                addCommentLoading: true,\n                addCommentDone: false,\n                addCommentError: null,\n            };\n        case ADD_COMMENT_SUCCESS:\n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentDone: true,\n            };\n        case ADD_COMMENT_FAILURE:\n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentError: action.error,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}