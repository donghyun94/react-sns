{"ast":null,"code":"var _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\"); // 코멘트 추가가 완료되면 코멘트 입력 창을 비운다.\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","addCommentDone","addCommentLoading","state","id","user","me","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","userId","postId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAwCP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACJ,IAAlB,CAAzD;AACA,QAAMK,EAAE,GAAGT,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACE,IAAN,CAAWC,EAAtB,mDAAW,eAAeF,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM,CAACG,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE,CAJ8B,CAM9B;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,cAAJ,EAAoB;AAChBQ,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,GAJQ,EAIN,CAACR,cAAD,CAJM,CAAT;AAMA,QAAMS,eAAe,GAAGnB,WAAW,CAAC,MAAM;AACtCS,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAEd,mBADD;AAELe,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAEV,EAAhC;AAAoCW,QAAAA,MAAM,EAAEhB,IAAI,CAACK;AAAjD;AAFD,KAAD,CAAR;AAIH,GALkC,EAKhC,CAACG,WAAD,EAAcH,EAAd,CALgC,CAAnC;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,IAAI,EAAE,CAAtB;AAAyB,IAAA,KAAK,EAAEV,WAAhC;AAA6C,IAAA,QAAQ,EAAEC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KAAf;AAAgE,IAAA,IAAI,EAAC,SAArE;AAA+E,IAAA,QAAQ,EAAC,QAAxF;AAAiG,IAAA,OAAO,EAAEjB,iBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ,CADJ;AAUH,CA9BD;;AAgCAJ,WAAW,CAACsB,SAAZ,GAAwB;AACpBrB,EAAAA,IAAI,EAAEN,SAAS,CAAC4B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAexB,WAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n    const { addCommentDone, addCommentLoading } = useSelector((state) => state.post);\n    const id = useSelector((state) => state.user.me?.id);\n    const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n    // 코멘트 추가가 완료되면 코멘트 입력 창을 비운다.\n    useEffect(() => {\n        if (addCommentDone) {\n            setCommentText(\"\");\n        }\n    }, [addCommentDone]);\n\n    const onSubmitComment = useCallback(() => {\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, userId: id, postId: post.id },\n        });\n    }, [commentText, id]);\n\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: \"relative\", margin: 0 }}>\n                <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n                <Button style={{ position: \"absolute\", right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\" loading={addCommentLoading}>\n                    삐약\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}