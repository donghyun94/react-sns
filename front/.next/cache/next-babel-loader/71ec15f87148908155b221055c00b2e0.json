{"ast":null,"code":"var _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id); // 내가 팔로우 중인 아이디들 중에 포스트 작성자의 아이디가 있으면 true\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      // 팔로잉 중에 버튼을 누르면 언팔\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      // 아니면 팔로우\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, isFollowing ? \"언팔로우\" : \"팔로우\");\n};\n\nFollowButton.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/FollowButton.js"],"names":["React","useCallback","Button","PropTypes","useSelector","useDispatch","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AAEA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA9C,CAApB,CAJ+B,CAIwC;;AAEvE,QAAME,aAAa,GAAGrB,WAAW,CAAC,MAAM;AACpC,QAAIe,WAAJ,EAAiB;AACb;AACAN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KAND,MAMO;AACH;AACAV,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAdgC,EAc9B,CAACJ,WAAD,CAd8B,CAAjC;AAgBA,SACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WAAW,GAAG,MAAH,GAAY,KAD5B,CADJ;AAKH,CA3BD;;AA6BAR,YAAY,CAACiB,SAAb,GAAyB;AACrBhB,EAAAA,IAAI,EAAEN,SAAS,CAACuB,MAAV,CAAiBC;AADF,CAAzB;AAIA,eAAenB,YAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from \"../reducers/user\";\n\nconst FollowButton = ({ post }) => {\n    const dispatch = useDispatch();\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n\n    const isFollowing = me?.Followings.find((v) => v.id === post.User.id); // 내가 팔로우 중인 아이디들 중에 포스트 작성자의 아이디가 있으면 true\n\n    const onClickButton = useCallback(() => {\n        if (isFollowing) {\n            // 팔로잉 중에 버튼을 누르면 언팔\n            dispatch({\n                type: UNFOLLOW_REQUEST,\n                data: post.User.id,\n            });\n        } else {\n            // 아니면 팔로우\n            dispatch({\n                type: FOLLOW_REQUEST,\n                data: post.User.id,\n            });\n        }\n    }, [isFollowing]);\n\n    return (\n        <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n            {isFollowing ? \"언팔로우\" : \"팔로우\"}\n        </Button>\n    );\n};\n\nFollowButton.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default FollowButton;\n"]},"metadata":{},"sourceType":"module"}