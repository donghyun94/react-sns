{"ast":null,"code":"var _jsxFileName = \"/Users/dong/Documents/react-sns/front/components/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Form, Input, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\"; // 로그인을 위한 액션 함수 가져오기\n\nimport { loginRequestAction } from \"../reducers/user\";\nimport Styled from \"styled-components\"; // styled components 사용을 통해 나만의 css 요소를 사용!\n\nconst ButtonWrapper = Styled.div`margin-top: 10px;`;\nconst LoginInput = Styled(Input)`display: block; width: 200px;`;\n\nconst LoginForm = () => {\n  const {\n    0: email,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    loginLoading,\n    loginError\n  } = useSelector(state => state.user);\n  const onChangeEmail = useCallback(e => {\n    setId(e.target.value);\n  }, []);\n  const onChangePw = useCallback(e => {\n    setPassword(e.target.value);\n  }, []);\n  const submitHandler = useCallback(() => {\n    // redux 디스패치를 이용하여 로그인 데이터 전달\n    dispatch(loginRequestAction({\n      email,\n      password\n    }));\n  }, [email, password]);\n  useEffect(() => {\n    if (loginError) {\n      alert(loginError);\n    }\n  }, [loginError]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(LoginInput, {\n    name: \"user-id\",\n    value: email,\n    type: \"email\",\n    onChange: onChangeEmail,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(LoginInput, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePw,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loginLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/dong/Documents/react-sns/front/components/LoginForm.js"],"names":["React","useState","useCallback","useEffect","Link","Form","Input","Button","useDispatch","useSelector","loginRequestAction","Styled","ButtonWrapper","div","LoginInput","LoginForm","email","setId","password","setPassword","dispatch","loginLoading","loginError","state","user","onChangeEmail","e","target","value","onChangePw","submitHandler","alert"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { Form, Input, Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// 로그인을 위한 액션 함수 가져오기\nimport { loginRequestAction } from \"../reducers/user\";\nimport Styled from \"styled-components\";\n\n// styled components 사용을 통해 나만의 css 요소를 사용!\nconst ButtonWrapper = Styled.div`margin-top: 10px;`;\nconst LoginInput = Styled(Input)`display: block; width: 200px;`;\n\nconst LoginForm = () => {\n    const [email, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const { loginLoading, loginError } = useSelector((state) => state.user);\n\n    const onChangeEmail = useCallback((e) => {\n        setId(e.target.value);\n    }, []);\n    const onChangePw = useCallback((e) => {\n        setPassword(e.target.value);\n    }, []);\n\n    const submitHandler = useCallback(() => {\n        // redux 디스패치를 이용하여 로그인 데이터 전달\n        dispatch(loginRequestAction({ email, password }));\n    }, [email, password]);\n\n    useEffect(() => {\n        if (loginError) {\n            alert(loginError);\n        }\n    }, [loginError]);\n    return (\n        <>\n            <Form onFinish={submitHandler}>\n                <div>\n                    <label htmlFor=\"user-id\">이메일</label>\n                    <LoginInput name=\"user-id\" value={email} type=\"email\" onChange={onChangeEmail} required />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password\">비밀번호</label>\n                    <LoginInput name=\"user-password\" type=\"password\" value={password} onChange={onChangePw} required />\n                </div>\n                <ButtonWrapper>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loginLoading}>\n                        로그인\n                    </Button>\n                    <Link href=\"/signup\">\n                        <a>\n                            <Button>회원가입</Button>\n                        </a>\n                    </Link>\n                </ButtonWrapper>\n            </Form>\n        </>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}